generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(cuid())
  name         String
  email        String  @unique
  passwordHash String  @map("password_hash")
  avatarUrl    String? @map("avatar_url")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt() @map("updated_at")

  tokens Token[]

  @@map("users")
}

enum TokenType {
  UPLOAD_FILE
  PASSWORD_RECOVER
}

model Token {
  id   String    @id @default(cuid())
  type TokenType

  createdAt DateTime @default(now()) @map("created_at")

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @map("user_id")

  @@map("tokens")
}

model PaymentMethod {
  id          String @id @default(cuid())
  description String

  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt() @map("updated_at")
  transactions Transaction[]

  @@map("payment_methods")
}

enum TransactionType {
  REVENUE
  EXPENSES
}

model Transaction {
  id              String          @id @default(cuid())
  description     String
  shopName        String          @map("shop_name")
  amountInCents   Float           @map("amount_in_cents")
  paymentAt       DateTime        @map("payment_at")
  transactionType TransactionType

  paymentMethod   PaymentMethod @relation(fields: [paymentMethodId], references: [id], onDelete: Cascade)
  paymentMethodId String        @map("payment_method_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt() @map("updated_at")

  @@map("transactions")
}
